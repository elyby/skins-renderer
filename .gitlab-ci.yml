stages:
  - prepare
  - tests
  - build
  - cleanup

variables:
  PHP_BUILD_IMAGE: edbizarro/gitlab-ci-pipeline-php:7.4-alpine
  DOCKER_BUILD_IMAGE: docker:19.03.2

  APP_IMAGE_NAME: "$CI_REGISTRY_IMAGE"

#######################
# Shared script steps #
#######################

# GitLab do not supports bash syntax in the "variables" definitions,
# so we use custom step to define all necessary environment variables
.defineVars: &defineVars |-
  export VERSION="${CI_COMMIT_TAG:-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}}"

  export APP_VERSIONED_IMAGE_NAME="$APP_IMAGE_NAME:$VERSION"
  export APP_LATEST_IMAGE_NAME="$APP_IMAGE_NAME:latest"

.dockerLogin: &dockerLogin |-
  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

###################
# Steps to extend #
###################

.vendorCache:
  cache:
    key: php-deps
    paths:
      - vendor
    policy: pull

#################
# Prepare stage #
#################

Composer:
  stage: prepare
  image: $PHP_BUILD_IMAGE
  extends:
    - .vendorCache
  cache:
    policy: pull-push
  script:
    - composer install

#################
# Testing stage #
#################

PHP-CS-Fixer:
  stage: tests
  image: $PHP_BUILD_IMAGE
  extends:
    - .vendorCache
  script:
    - vendor/bin/php-cs-fixer fix -v --dry-run

PHPUnit:
  stage: tests
  image: $PHP_BUILD_IMAGE
  extends:
    - .vendorCache
  script:
    - vendor/bin/phpunit --coverage-text

###############
# Build stage #
###############

Docker:
  stage: build
  image: $DOCKER_BUILD_IMAGE
  before_script:
    - *defineVars
    - *dockerLogin
  script:
    # Download previous image to use it as a cache
    - docker pull "$APP_LATEST_IMAGE_NAME" || true
    # Build image
    - >
      docker build
      --pull
      --cache-from "$APP_LATEST_IMAGE_NAME"
      -t "$APP_VERSIONED_IMAGE_NAME"
      -t "$APP_LATEST_IMAGE_NAME" .
    # Push images to the registry
    - docker push $APP_VERSIONED_IMAGE_NAME
    - docker push $APP_LATEST_IMAGE_NAME
  only:
    - master
    - tags

#################
# Cleanup stage #
#################

Remove Docker images:
  stage: cleanup
  image: $DOCKER_BUILD_IMAGE
  variables:
    GIT_STRATEGY: none
  before_script:
    - *defineVars
  script:
    - docker rmi "$APP_LATEST_IMAGE_NAME" "$APP_VERSIONED_IMAGE_NAME" || true
  when: always
  only:
    - master
    - tags
